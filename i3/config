# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

focus_follows_mouse no
set $i3lockwall sh ~/.config/i3/scripts/lock.sh
bindsym $mod+Ctrl+Shift+l exec --no-startup-id $i3lockwall

# shutdown / restart / suspend...
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (CTRL+s) shutdown

mode "$mode_system" {
    bindsym l exec --no-startup-id $i3lockwall, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $i3lockwall && loginctl suspend, mode "default"
    bindsym h exec --no-startup-id $i3lockwall && loginctl hibernate, mode "default"
    bindsym r exec --no-startup-id loginctl reboot, mode "default"
    bindsym Ctrl+s exec --no-startup-id loginctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+BackSpace mode "$mode_system"




set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec st

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

#screenshot
bindsym Print exec flameshot gui

# change focus
bindsym $mod+j focus left
bindsym $mod+l focus up
# bindsym $mod+h focus up
bindsym $mod+k focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move right
bindsym $mod+Shift+l move up
# bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move workspace between monitors
bindsym $mod+Shift+greater move workspace to output right
bindsym $mod+Shift+less move workspace to output left

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus floating

# rofi
bindsym $mod+d exec --no-startup-id rofi -show combi -show-icons

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

bindsym $mod+n workspace next
bindsym $mod+b workspace prev

bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab move container to workspace back_and_forth
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"       
}
bindsym $mod+r mode "resize"



# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available
#bar {
 #       status_command i3status
#}


# Picom
# exec_always --no-startup-id picom &

# Tiling Hack
exec_always --no-startup-id ~/.config/i3/scripts/tiling.py

############# VOLUME ###############
# exec --no-startup-id volumeicon

################### WALLPAPER ###################
#exec_always feh --bg-fill ~/Pictures/wallpaper.png
exec_always ./.fehbg

###### REFRESH RATE ######
# exec_always xrandr --output HDMI-0 --mode 1920x1080 --rate 240

###### FIX MOUSE ######
# exec_always for id in $(xinput list | grep "pointer" | cut -d '=' -f 2 | cut -f 1); do xinput --set-prop $id 'libinput Accel Profile Enabled' 0, 1; done

##### POLYBAR #####
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

##### PIPEWIRE #####
# exec ~/.config/i3/scripts/pipewirestart.sh


##### SCRATCHPAD #####
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

##### ASSIGN TO WORKSPACES #####
# assign [class=""]                          1  
# assign [class="robloxplayerbeta.exe"]        2
# assign [class="firefox|Firefox"]             3
# assign [instance="discord"]                  4
# assign [class="Spotify|spotify"]             5
# assign [class=""]                          6
# assign [class=""]                          7
# assign [class=""]                          8
# assign [class=""]                          9

#fix for spotify being wonky
# for_window [class="Spotify"] move to workspace 5

#set Colors
set $hc-color #FFFFFF
set $bg-color #262626
set $sc-color #FFFFFF
set $fg-color #FFFFFF
# Black + DarkGrey
set $color0   #262626
set $color8   #928374
# DarkRed + Red
set $color1   #cc241d
set $color9   #fb4934
# DarkGreen + Light Green
set $color2   #98971a
set $color10  #b8bb26
# DarkYellow + Yellow
set $color3   #d79921
set $color11  #fabd2f
# DarkBlue + Blue
set $color4   #458588
set $color12  #83a598
# DarkMagenta + FFFFFF
set $color5   #b16286
set $color13  #d3869b
# DarkCyan + Cyan
set $color6   #689d6a
set $color14  #8ec07c
# LightGrey + White
set $color7   #a89984
set $color15  #ebdbb2
# Border
set $color16 #404040

# set $borderInactive #928374
set $borderInactive #444444
set $borderActive   #7aa2d7



# Window Colors
#			Border		  Background          Text              Indicator
client.focused          $borderActive     $borderActive       $borderActive     $borderActive
client.focused_inactive $borderInactive   $borderInactive     $borderInactive   $borderInactive
client.unfocused        $borderInactive   $borderInactive     $borderInactive   $borderInactive
client.urgent           $color9   	  $color9	      $color9    	$color9
client.background       $bg-color


       # bindsym Shift+plus  gaps outer all plus 5
        #bindsym Shift+minus gaps outer all minus 5
       # bindsym Shift+0     gaps outer all set 0


################### GAPS ######################## {{{

# No titles, minimal borders
for_window [class="^.*"] border pixel 3
#new_window 1pixel

# You can also use any non-zero value if you'd like to have a border
# for_window [class=".*"] border pixel 0

# gaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>
# workspace <ws> gaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>

gaps inner 10
# gaps outer 10
# gaps top 30
 
# smart_gaps on
# smart_borders on


# i3-gaps-rounded
# border_radius 6


#set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)

bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}


#}}}

################### WORKSPACE GAPS ############## {{{

# workspace 10 gaps inner 15

#}}}

################### FLOATING WINDOWS ############ {{{

#  for_window [class="Lxappearance"] floating enable

# Use $mod+Mouse to drag floating windows to their wanted position
  floating_modifier $mod


#floating enabled from some programs - find with xprop
for_window [class="Pavucontrol"] floating enable
for_window [window_role="pop-up"] floating enable
for_window [window_role="^Preferences$"] floating enable
for_window [window_role="setup"] floating enable
for_window [title="Copying"] floating enable
for_window [title="Deleting"] floating enable
for_window [title="Moving"] floating enable
for_window [class="Galculator"] floating enable
for_window [instance="script-fu"] border normal

#Popups during fullscreen mode
popup_during_fullscreen smart

#}}}

################### MOVE ######################## {{{

bindsym $mod+m mode "move" focus floating

mode "move" {
    bindsym $mod+Tab focus right

    bindsym Left  move left
    bindsym Down  move down
    bindsym Up    move up
    bindsym Right move right

    bindsym h     move left
    bindsym j     move down
    bindsym k     move up
    bindsym l     move right

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#}}}
